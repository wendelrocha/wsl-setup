---
- name: Preparing my laptop POP-OS 22.04 LTS
  hosts: localhost
  connection: local
  tasks:

    - name: Installing Linux Apps
      become: true
      apt:
        name: '{{ item }}'
        install_recommends: yes
        state: present
      loop:
          - vim
          - htop
          - curl
          - wget
          - ncdu
          - tree
          - apt-transport-https
          - ca-certificates
          - gnupg
          - python3-pip
          - make
          - git
          - bash-completion
          - gnupg-agent
          - zsh
          - flameshot
          - fonts-hack
          - tilix
          - virtualbox
          - mlocate
          - krita
          - jq
          - mtr

    - block:
      - name: Verify if Oh-My-zsh is installed
        command: test -d /home/{{ ansible_user_id }}/.oh-my-zsh
        register: ohmyzsh
        ignore_errors: true
      - name: Installing Oh-My-zsh
        shell:
          cmd: 'curl -fsL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh | bash'
          warn: false
        when: ohmyzsh.rc != 0
      - name: Changing Default Shell to ZSH
        become: yes
        user:
          name: '{{ ansible_user_id }}'
          shell: /bin/zsh
      - name: Changing Default ZSH Theme to Agnoster
        lineinfile:
          path: /home/{{ ansible_user_id }}/.zshrc
          regexp: '^ZSH_THEME='
          line: 'ZSH_THEME="agnoster"'
      # - name: Install zsh-autosuggestions plugin
      #   become: true
      #   get_url:    
      #    url: 'https://github.com/zsh-users/zsh-autosuggestions'
      #    dest: /home/{{ ansible_user_id }}/.oh-my-zsh/custom/plugins/zsh-autosuggestions
      #    #mode: 755        
      # - name: Apply zsh-autosuggestions plugin 
      #   lineinfile:
      #     path: /home/{{ ansible_user_id }}/.zshrc
      #     regexp: '^plugins='
      #     line: 'plugins=(git zsh-autosuggestions)'
    
    - block: 
      - name: Install Docker Key
        become: true
        apt_key:
          url: 'https://download.docker.com/linux/ubuntu/gpg'
          state: present
      - name: Install Docker Repository
        become: true
        apt_repository:
          repo: 'deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable'
          state: present
          filename: docker-ce
      - name: Install Docker
        become: true
        apt:
          name: docker-ce
      - name: Adding existing user to group Docker
        become: true
        user: 
          name: '{{ ansible_user_id }}'
          groups: docker 
          append: yes
      - name: Install Docker-Compose
        become: true
        get_url:
          url: 'https://github.com/docker/compose/releases/download/v2.24.1/docker-compose-linux-x86_64' 
          dest: '/usr/local/bin/docker-compose'
          mode: 755
      - name: Install Docker Machine Bash Completion
        become: true
        get_url:
          url: 'https://raw.githubusercontent.com/docker/machine/v0.16.2/contrib/completion/bash/docker-machine.bash'
          dest: '/etc/bash_completion.d/docker-machine'
      - name: Install Docker-Compose Bash Completion
        become: true
        get_url:
          url: 'https://raw.githubusercontent.com/docker/compose/1.29.2/contrib/completion/bash/docker-compose'
          dest: '/etc/bash_completion.d/docker-compose'
      - name: Install Docker-Compose and Docker Machine Zsh Completion
        lineinfile:
          path: /home/{{ ansible_user_id }}/.zshrc
          regexp: '^plugins='
          line: 'plugins=(git docker docker-compose)'    
        
    - block:
      - name: Install Kind
        become: true
        get_url:
          url: 'https://kind.sigs.k8s.io/dl/v0.20.0/kind-linux-amd64' 
          dest: '/usr/local/bin/kind'
          mode: 755    
    
    - block:
      - name: Installing Kubectl 1.29.1
        become: true
        get_url:    
          url: 'https://dl.k8s.io/release/v1.29.1/bin/linux/amd64/kubectl' 
          dest: /usr/local/bin/kubectl
          mode: 755        
        
    - block:
      - name: Install Helm Key 
        become: true
        apt_key: 
          url: 'https://baltocdn.com/helm/signing.asc'
          state: present
      - name: Install Helm Repository
        become: true
        apt_repository:
          repo: 'deb [arch=amd64] https://baltocdn.com/helm/stable/debian/ all main'
          state: present
          filename: helm-stable-debian.list
      - name: Install Helm
        become: true
        apt:
          name: helm 

    - block:
      - name: Install Google Key
        become: true
        apt_key: 
          url: 'https://dl.google.com/linux/linux_signing_key.pub'
          state: present
      - name: Install Google Repository
        become: true
        apt_repository:
          repo: 'deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main'
          state: present
          filename: google-chrome
      - name: Install Google Chrome
        become: true
        apt:
          name: google-chrome-stable

    - block:
      - name: Installing Vagrant 2.4.0
        become: true
        unarchive:
          src: 'https://releases.hashicorp.com/vagrant/2.4.0/vagrant_2.4.0_linux_amd64.zip' 
          dest: /usr/local/bin
          remote_src: yes

    - block:
      - name: Installing Terraform 1.7.0
        become: true
        unarchive:
          src: 'https://releases.hashicorp.com/terraform/1.7.0/terraform_1.7.0_linux_amd64.zip' 
          dest: /usr/local/bin
          remote_src: yes

    - block:
      - name: Installing OpenTofu 
        become: true
        unarchive:
          src: 'https://github.com/opentofu/opentofu/releases/download/v1.6.0/tofu_1.6.0_linux_amd64.zip' 
          dest: /usr/local/bin
          remote_src: yes
   
    - block:
      - name: Install Microsoft Key
        become: true
        apt_key:
          url: 'https://packages.microsoft.com/keys/microsoft.asc'
          state: present
      - name: Install VSCode Repository
        become: true
        apt_repository:
          repo: 'deb [arch=amd64] https://packages.microsoft.com/repos/vscode stable main'
          state: present
          filename: vscode
      - name: Install Visual Studio Code
        become: true
        apt:
          name: code
      - name: Install Virtual Studio Code Extensions
        shell:
          cmd: code --install-extension '{{ item }}' 
        loop: 
          - ms-python.python
          - ms-azuretools.vscode-docker
          - bbenoist.vagrant
          - hashicorp.terraform
          - gruntfuggly.todo-tree
          - njpwerner.autodocstring
          - eamodio.gitlens
            #
            #    - block:
            #      - name: Adding Longsleep/Golang Backports Repository
            #        become: true
            #        apt_repository:
            #          repo: 'ppa:longsleep/golang-backports'
            #      - name: Install Golang 
            #        become: true
            #        apt:
            #          name: golang-go
          
# OPTIONAL:
#  - PEEK - Lightweight Screen Recorder that can export as GIF
#  - OBS-STUDIO - Screen Recorder and Casting Software 
#  - Brave Browser - Secure web browser
#  - Ulauncher - Application Launcher

            #    - block:
            #      - name: Adding Peek Repository
            #        become: true
            #        apt_repository:
            #          repo: 'ppa:peek-developers/stable'
            #      - name: Install Peek
            #        become: true
            #        apt:
            #          name: peek
            #
            #    - block: 
            #      - name: Install Brave Key
            #        become: true
            #        apt_key:
            #          url: 'https://brave-browser-apt-release.s3.brave.com/brave-core.asc'
            #          state: present
            #      - name: Install Brave Repository
            #        become: true
            #        apt_repository:
            #          repo: 'deb [arch=amd64] https://brave-browser-apt-release.s3.brave.com/ stable main'
            #          state: present
            #          filename: brave
            #      - name: Install Brave Browser
            #        become: true
            #        apt:
            #          name: brave-browser
